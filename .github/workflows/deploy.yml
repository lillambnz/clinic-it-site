name: Deploy to Cloud Run

on:
  push:
    branches: [main]

jobs:
  deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Configure Docker for GCP
        run: |
          echo "${{ secrets.GCP_SA_KEY }}" > /tmp/key.json
          gcloud auth activate-service-account --key-file=/tmp/key.json
          gcloud config set project ${{ secrets.GCP_PROJECT_ID }}
          gcloud auth configure-docker australia-southeast1-docker.pkg.dev

      - name: Build and push Docker image
        run: |
          docker build -t australia-southeast1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/medtech-docker-repo/medtech-it:latest .
          docker push australia-southeast1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/medtech-docker-repo/medtech-it:latest

      - name: Deploy to Cloud Run
        uses: google-github-actions/deploy-cloudrun@v1
        with:
          service: medtech-it
          region: australia-southeast1
          image: australia-southeast1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/medtech-docker-repo/medtech-it:latest
          env_vars: |
            RECAPTCHA_SECRET_KEY=${{ secrets.RECAPTCHA_SECRET_KEY }}
            EMAIL_HOST=${{ secrets.EMAIL_HOST }}
            EMAIL_PORT=${{ secrets.EMAIL_PORT }}
            EMAIL_USER=${{ secrets.EMAIL_USER }}
            EMAIL_PASSWORD=${{ secrets.EMAIL_PASSWORD }}
            EMAIL_FROM=${{ secrets.EMAIL_FROM }}
            EMAIL_TO=${{ secrets.EMAIL_TO }}
